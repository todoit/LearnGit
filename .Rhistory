print(y_1)
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum(rank_1-rank_0) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.txt",sep="\t",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= 0.02){
print(paste("第",i,"次循环开始==========================:")
y_1 = ((data1$x1  + step_sum) * weight[1]) + (data1$x2 * weight[2]) + (data1$x3 * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print(y_1)
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum(rank_1-rank_0) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.txt",sep="\t",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= 0.02){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1  + step_sum) * weight[1]) + (data1$x2 * weight[2]) + (data1$x3 * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print(y_1)
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum(rank_1-rank_0) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.txt",sep="\t",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= 0.02){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1  + step_sum) * weight[1]) + (data1$x2 * weight[2]) + (data1$x3 * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum(rank_1-rank_0) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.txt",sep="\t",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1  + step_sum) * weight[1]) + (data1$x2 * weight[2]) + (data1$x3 * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum(rank_1-rank_0) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
data1 = read.csv("/Users/Eric/study/R-Project/test3.txt",sep="\t",header=T)
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.csv",sep=",",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1  + step_sum) * weight[1]) + (data1$x2 * weight[2]) + (data1$x3 * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum(rank_1-rank_0) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
data1
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.csv",sep=";",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1  + step_sum) * weight[1]) + (data1$x2 * weight[2]) + (data1$x3 * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum(rank_1-rank_0) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
a = c(1,2,3)
b = c(2,3,1)
print(sum(a-b))
print(sum(a-b)^2)
print(sum((a-b)^2))
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.csv",sep=";",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1  + step_sum) * weight[1]) + (data1$x2 * weight[2]) + (data1$x3 * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum((rank_1-rank_0)^2) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.csv",sep=";",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1  ) * weight[1]) + (data1$x2 * weight[2]) + ((data1$x3+ step_sum) * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum((rank_1-rank_0)^2) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.csv",sep=";",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1 + step_sum) ) * weight[1]) + (data1$x2 * weight[2]) + ((data1$x3+ step_sum) * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum((rank_1-rank_0)^2) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.csv",sep=";",header=T)
#设定权重
weight = c(0.23,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1 + step_sum)  * weight[1]) + (data1$x2 * weight[2]) + ((data1$x3+ step_sum) * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum((rank_1-rank_0)^2) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.csv",sep=";",header=T)
#设定权重
weight = c(0.83,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1 + step_sum)  * weight[1]) + (data1$x2 * weight[2]) + ((data1$x3+ step_sum) * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum((rank_1-rank_0)^2) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.csv",sep=";",header=T)
#设定权重
weight = c(0.93,0.39,0.25,0.13)
#设定步长
step = 0.01
#设定终值
end = 1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = 0.01 #保存增加的值
aa = c(1:100)
while (step_sum <= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1 + step_sum)  * weight[1]) + (data1$x2 * weight[2]) + ((data1$x3+ step_sum) * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum((rank_1-rank_0)^2) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
#计算指标的灵敏度
#读取数据
data1 = read.csv("/Users/Eric/study/R-Project/test3.csv",sep=";",header=T)
#设定权重
weight = c(0.93,0.39,0.25,0.13)
#设定步长
step = -0.01
#设定终值
end = -1
#开始循环之前计算最初结果并排序
y_0 = data1$x1 * weight[1] + data1$x2 * weight[2] +data1$x3 * weight[3]  + data1$x4 * weight[4]
rank_0 = order(y_0,decreasing = TRUE)
print(y_0)
print(rank_0)
#把x1列全部加上步长的和,循环计算
i = 1
step_sum = -0.01 #保存增加的值
aa = c(1:100)
while (step_sum >= end){
print(paste("第",i,"次循环开始==========================:"))
y_1 = ((data1$x1 + step_sum)  * weight[1]) + (data1$x2 * weight[2]) + ((data1$x3+ step_sum) * weight[3])  + ((data1$x4) * weight[4])
rank_1 = order(y_1,decreasing = TRUE)
print("结果如下")
print(y_1)
print("排名如下")
print(rank_1)
#比较两个向量是否相同,和最原始的y_0比较
#如果相同，则排序向量相减不等于0，表示找到临界值
if(sum((rank_1-rank_0)^2) != 0){
#print(step_sum)
print(paste("第",i,"次循环，和上一次不相同，结束循环"))
break
}
print(paste("第",i,"次循环结束=====:","步长和是",step_sum,", 排名之差是:",sum(rank_1-rank_0),sep=""))
step_sum = step_sum + step
i = i+1
}
?rnorm
rnorm
External
con <- url("http://www.jhsph.edu","r")
con <- url("http://www.jhsph.edu","r")
x <- readLines(con)
x
head(x)
?url
a <- available.packages()
head(a)
library(ggplot2)
install.packages("ggplot2")
install.packages("KernSmooth")
library(KernSmooth)
